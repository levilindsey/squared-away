----- TODO -----
- keep an array representing the squares of the chess board and which pieces are in which squares
	- each 'piece' needs to be an object containing:
		- piece type name
		- true or false representing which player owns the piece
- keep a manifest with important info for each type of piece:
	- keyed by piece type name
	- value contains:
		- image filename
		- width
		- height
		- function which returns true if this piece is capable of moving from the given source to the given destination
			- will need to know the current contents of the chess board
			- will need to be told which player owns this piece
			- special cases to consider:
				- pawn:
					- initial two-space move
					- attacking diagonally
				- rook:
					- castling with the king
				- king:
					- castling with a rook
					- cannot move into check mate
				- regarding check:
					- any move cannot be considered valid if the king is in check afterwards (so we must check for check with each potential move)
		- function which performs the necessary adjustments to move this piece to the given destination
			- will need to consider the special cases from the above valid-move function
- castling:
	- both the king and the rook will need to keep track of whether they have yet been moved at all
	- we will need to loop over every square in the board to ensure no enemy piece can move to any of the squares passed over (or to) by the king
		- in the case of pawns, the move to consider is a diagonal move
- taking en-passant:
	- if the earlier move was a double-step from a pawn, and it landed adjacent to an enemy pawn on the same row, then keep track of this for allowing the enemy to "take" the double-stepped pawn on his/her immediate next move
- promoting:
	- when a pawn gets to the opposite side, display four images (queen, rook, knight, bishop) below the game board
	- disallow all further moves until the player has clicked on one of these four images
	- then replace the pawn with the appropriate piece
	- make sure to update the images to use the right colored pieces
- there must be a check for whether the player is in check:
	- 
	- when this happens, display "The [black|white] player is in check" (via #status)
- there must be a check for whether ANY possible move results in the player not being in check:
	- 
	- when there is no such move, display one of the two (via #status):
		- "The [black|white] player is mated"
		- "The [black|white] player is stalemated"
- update playerColor.innerHTML between turns
- when a player clicks on a piece to select it, do one of two things:
	- if it is possible to move that piece, then force the player to move that piece this turn,
	- else highlight the square with a red error background, and display the message, "You cannot move that piece this turn" (via #notification)
- when a player clicks on an invalid position to move a piece, display "You cannot make that move" (via #notification)
- after each move, report the result of the move (via #notification). E.g:
	- "white queen moved from A8 to F3"
	- "white queen took black pawn"
- re-size to fit screen?
- add the count for how many turns have gone by which leads to a draw being called