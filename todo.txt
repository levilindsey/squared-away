// ------------------------------------------------------------------------- //
// ---------- SOON
// ------------------------------------------------------------------------- //

- change the squares-on-the-game-area implementation to instead be a mapping with ONLY the actual squares that are in the game
    - hopefully, this fixes the severe slow-down I am seeing

- add the guts to the different game-logic JS prototypes

- have circular progress indicators around the borders of the preview windows which indicate how soon it will be before the shown block is dropped

- add the shimmer animation to the tiles
    - make this a regularly occurring thing for each entire BLOCK
	- make this a completely randomly occuring thing for each stationary SQUARE

- UNIT TESTS:
	- test for a long list of things that the browser needs to support (for each of these things, tell the player what is missing):
		- canvas
		- audio stuff...
		- transparency in CSS colors
		- 
	- add proper unit tests for classes:
		- google how to go about doing this

- brighten:
	- blocks
	- title
	- background

- make the game area size dynamically adjust with the size of the window

- move the Sprite functionality to Block and then delete the Sprite file

- use blocks of 5 instead of 4? (could be more fun; definitely less likely to infringe on copyright)
    - have this be another mode in the web version
	- use a different sprite sheet for the 5-square possibilities
	    - will need to make many additional colors

- add an additional ability somehow to occasionally destroy blocks in a special way:
    - this could mean clearing the lowest level on all sides
	- this could mean clearing all of the blocks in a certain diameter
	- this could mean "settling" all blocks on a certain side or within a diameter
	    *- this could be available every so many points and could mean "settling" a certain number of layers on ALL sides
	- this ability could be available every so many points, levels, or seconds
	*- this ability could appear randomly as a special "block" that needs to be placed and then tapped to detonate
	- or try a multiple of these ideas...
- *add jitter/shimmer animation that occurs to the center square every time a block lands
    - have an inner center square appear that is slightly smaller than the main one
	- have this start centered, but then quickly move around in random directions in and out of the center position (alternate center with random offset)
	- have this be mostly transparent, with a 2px stroke, and have the fill color change randomly and quickly between the seven options
- 

// ------------------------------------------------------------------------- //
// ---------- DESKTOP POST-IT NOTE
// ------------------------------------------------------------------------- //

**- add the collapse and settle bombs:
	- add code to catch the mouse clicks and directional button presses in order to first select other preview windows, and then to release the bomb
	- COLLAPSE BOMB:
		- collapse all blocks within a radius
		- will this need to also cause settling?
			- if so, it should happen in the direction the bomb fell
	- SETTLE BOMB:
		- animate the center square so that it vibrates and bounces around briefly
		- settle ALL blocks on the map
**- add four new sound effects:
	- one for when a bomb is primed (or started naturally)
		- an alarm/warning-like sound? that oww-ooooooh-gah low sirenish sound?
	- one for the release of a bomb (or a natural bomb!)
		- a super slow high-to-low slide (or alternatively, something like the sound of a quick rocket taking off)
	- one for each of the two types of bombs detonating
		- collapse: general boom; similar to the normal collapse sound
		- settle: sizzly, sand-like
****- ADD THE DATABASE!!!!:
	- change the logger code to handle this as well
	- make sure the uploaded logs are STREAM-LINED! (i.e., contain as little data representing as many extracted features as possible)
	- write the server-side code to handle all of the incoming logs:
		**- USE NODE.JS!!
		- this will need to get BOTH user-specific info AND aggregate info
		- user-specific:
			- a list of visits:
				- player id
				- ip address
				- time visited site
				- time left site
				- time logged in
			- a list of games played:
				- id of visit
				- time started
				- time ended
				- end level
				- which modes were on and off
				- whether they completed a game or quit early
		- aggregate:
			- times visited
			- times played
			- cumulative time spent playing
			- average level before dying/quitting
			- proportion of players using the various modes
			- proportion of players who even bother touching the modes
- hook up Google analytics to our site
- figure out why it doesn't work on Jackie's laptop
*<AFTER ADDING BOMBS>- update the direction images to have phantom guidelines
    - and create the two new images
**- add hover-over images for the help, sfx, and music buttons
**- make it so that when a new block is placed over existing squares to end the game, that the new block IS SHOWN IN THE RIGHT PLACE
    **- also, whenever the game is ended, show a big red circle where the cause is
**- upload to website!
    - and create some basic structure on the site
**- ANOTHER mode: blocks fall out rather than falling in
**- lessen the amplitude of the "move" sfx
    - because the sound really builds when using keyboard mode
****- RE-LOOK AT ALL OF THE MUSIC PLAYING LOGIC....
    - current issue is that _currSongIndex is -1 when _playCurrentSong happens (becuase I reset it in _startNewRandomSong)
    - and only the one song ever plays
**- can I detect dvorak??
- refactor my collision detection methods.  right now, they seem to duplicate a LOT of the same functionality...
- refactor my collapse/drop code.  it is way too duplicative.
- change the logic to allow the player to both drop AND move sideways a block in the same gesture?
- add a count of how many times the game has been played in total
- add my github link to my resume
****- fix up jackie and my pages:
	- update/change/remove all of my wording
	- give it some structure:
		- a banner image
			- include the circle face image from the homepage
		- a horizontal navigation bar under the banner
		- a vertical bar on the left with links to all of my external sites
		- 
	- get rid of the background gradient
	- change all of the external links in the entire website to open in a new tab
	- when we get the digital wedding pics, use them for the circle face images
**- resume:
	- correct the wedding page link
	- add the blurb about the app
	- add a bit about familiarity with node.js?
**- fix whatever it is that crashes on the wedding page
***- go through all of my old school code/projects, clean them up a LITTLE, and add them to my github!
***- NEXT PROJECT: finish my recognizer and port it over as a javascript app!


// ------------------------------------------------------------------------- //
// ---------- EVENTUALLY
// ------------------------------------------------------------------------- //

- Time functions:
	- USE PHP to get the login/logoff/visit times that are saved for each player
	- USE JS to get the machine's local time at start and for calculating durations and whatnot
- Cookies:
	- store the username for auto-filling login info
- re-factor the Block code to only use one manner of position information
- the ability to toggle different game modes will be unlocked by getting through later levels (and this data is saved to the player's account)
- show a red or white circle or block overlay centered where the block was which caused the game over
- look up how to make old 8-bit music sounds (alla NES)
    - then COMPOSE and "PRODUCE" my own music track(s)
- two options: logging in with a username VS playing as anonymous
- BIG animations:
    - a quick intro when the page is first loaded
	    - a bunch of blocks falling into the title area from all sides
		- they then collapse away to reveal the title
		- this is pre-scripted
	- a slow idle animation before the game has started for the first time
	    - blocks randomly fall across the canvas behind the transparent screen
		- two falling from each side always
- replace a lot of the media loading with ajax??
- actually animate (slide) the falling of blocks?
- after the database and login system are in place:
	- add the ability for people to unlock customizations/access to music, options, and various game modes!!
		- these are unlocked by either getting to higher levels, spending enough time playing, or getting enough points from a single collapse
	- store preferences for:
		- game modes
		- music
		- whether music and sfx are turned on or off
	- store which unlockables have been unlocked
	- store records representing individual play/log-on sessions, and also cumulative stats
- dynamic expanding and collapsing:
    - have the options, directions, and music choices all dynamically expand and collapse
    - so these should then be in 3 separate circular bubbles below the game area
    - have these 3 bubbles hover around the center, but slowly orbit each other in and out in tight, overlapping elliptical paths
    - then, on tap or hover over, expand all of these bubbles to their anchor positions (at which point they should NOT be moving at all)
    - then, when one is tapped, expand it to fill the main display area, while minimizing the others to one side or both
    - MAKE ALL OF THIS GENERIC (and, later, apply it to the wedding site?):
        - parameters:
			- a list of objects of the form:
				-	{
						expElement: <the DOM element containing the expanded content>,
						anchorPos: <the absolute x and y coords for this bubble's static position, BUT this should be obtained from the values given to the elements from the CSS file>,
						sideLinesPos: <the secondary static position to place this element when another element is being viewed in its expanded form>
					}
			- the absolute x and y coords of the center point around which the "bored" bubbles orbit/hover
			- the absolute x and y coords to place the main, expanded, selected element at
			- shrunk width and height
			- expanded width and height
			- the orbit/hover rate
			- the orbit/hover diameter
        	- (optional): whether each of the bubble anchor positions are interchangeable, or a given bubble always goes to the same anchor position
		- include all of the relevant style in a separate style sheet
			- each bubble div:
				- class="bubble"
				- a child div with class="shrunkContent"
				- a child div with class="expandedContent"
- add another mode for toggling the appearance of the two special bonus powers
- tell http://ericskiff.com/music/ that I used his music
- switch all of the exp growth to simple linear. duh.
- replace the links to SoundCloud clips with actually functionality for playing the pieces in my site with createjs.Sound
- update the background so that not all of the block shapes include 4 squares
- have the color-scheme change somehow with higher levels
- there should be a BIG bonus point increas if the player can clear all squares from the game window (exponentially increasing by level)
	- this check should start from the center and work its way out....
- have the smaller blocks appear slightly more frequently
**- additional peanut gallery comments:
	- in-game comments:
		- ...
	- randomized comments whenever a music selection changes
		- default:
			- <NOTHING>
		- addition:
			- Wow, you chose THAT song?
		- removal:
			- Hey!  I liked that one!
- animate both the collapse and the settling of blocks/layers
	- will need to do the bottom layer on one tick, then the next layer in the next tick, and so on

// ------------------------------------------------------------------------- //
// ---------- PLANNING
// ------------------------------------------------------------------------- //

- ASK JUSTIN AND ALDEN FOR FEEDBACK!
    - and music (Justin's bro's band; Alden for original stuff)
	- OR, just make something easy from one of my ideas on my phone (or from long ago compositions)

- Plan the exact player input/controls for playing the game
- Think through all possible details of the game playing behavior
    - How do completed layers collapse?
- Plan the layout of the main game area, the preview windows for each side, the banner, the description below.
    - Be minimalistic!  (have content dynamically display if the player asks (taps) for it?)
- Plan the art and all small animation details
- Plan music and SFX (i.e., ask Alden when the game is demoable)
- Plan how to create accounts and log in on the screen
- Plan how to show personal history
- Plan how to show community history (how many players, high scores)
- Plan SQL database:
    - How to save player profiles (name, email, username, all score/time/actions history, devices)
	- How to save gameplays (start time, end time, tiles given (when/where/what), action history)
	- How to save current state (so the player can come back to continue later)
	- How to save login visits (which device, when opened, when closed, when went idle, ...)
- Plan unlockables/achievements:
    - When getting past certain difficulty levels (from the very start)
    - When playing quickly enough
    - New tile/GUI art
    - New music?
- have a captcha for new user accounts for the scores, forums, and bug reports
- have a simple email button for reporting bugs
- say at the bottom of the info bit that the site uses cookies?

----
----
----
-- FROM GIT:
----

- Plan the exact player input/controls for playing the game
- Think through all possible details of the game playing behavior
    - How do completed layers collapse?
- Plan the layout of the main game area, the preview windows for each side, the banner, the description below.
    - Be minimalistic!  (have content dynamically display if the player asks (taps) for it?)
- Plan the art and all small animation details
- Plan music and SFX (i.e., ask Alden when the game is demoable)
- Plan how to create accounts and log in on the screen
- Plan how to show personal history
- Plan how to show community history (how many players, high scores)
- Plan SQL database:
    - How to save player profiles (name, email, username, all score/time/actions history, devices)
	- How to save gameplays (start time, end time, tiles given (when/where/what), action history)
	- How to save current state (so the player can come back to continue later)
	- How to save login visits (which device, when opened, when closed, when went idle, ...)
- Plan unlockables/achievements:
    - When getting past certain difficulty levels (from the very start)
    - When playing quickly enough
    - New tile/GUI art
    - New music?

Most of the main game logic in place:
	Tile behavior:
		Tiles of the right shape are previewed and then fall
		Tiles fall from all sides
		Tiles fall with randomized times within windows according to current difficulty
		Tiles are rendered with simple rect drawing to canvas
		Tiles fall gradually to the center
		Tiles spawn and come to rest
		Tile fall rate and spawn rate increases
		Collapse of complete layers is implemented
	player input:
		Actually capture the mouse tap and button press events on PCs and the finger tap and swipe events on mobile devices
		All player controls and actions are implemented

Tiles
Phantom line/position markings
Play area background
Surrounding area background
Borders
Create a pictoral description of how to play the game (for internationalization)
	But do also include a button in a corner with the i in a circle which represents info or more help

The code for animating all of the block behavior:
	Rotating
	Sliding both sideways and down
	Switching fall directions/sides
	Periodic "shimmers"
	Complete layer collapse disintegration effect
	Rendering of phantom lines/positions for player tile-movement events
Displaying time and current difficulty level
Miscellaneous aesthetic touches

SFX events triggered
Sound overlaying/interacting behavior figured out
Music looping behavior
Music switching behavior
Sound controls (with icons):
	Toggle music
	Toggle SFX